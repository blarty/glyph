package $[packageName];


import java.rmi.RMISecurityManager;
import java.util.ArrayList;
import java.util.Arrays;

import org.jini.glyph.ClientBuilder;
import org.jini.glyph.ClientBuilderImpl;

import net.jini.config.Configuration;
import net.jini.config.ConfigurationException;
import net.jini.config.ConfigurationProvider;
import net.jini.core.entry.Entry;
import net.jini.core.lookup.ServiceItem;
import net.jini.core.lookup.ServiceRegistrar;
import net.jini.discovery.DiscoveryEvent;
import net.jini.discovery.DiscoveryListener;

import java.io.IOException;

import java.rmi.Remote;
import java.rmi.activation.ActivationID;
import java.rmi.MarshalledObject;
import java.rmi.RemoteException;
import java.rmi.activation.ActivationException;
import java.rmi.activation.ActivationSystem;
import com.sun.jini.start.LifeCycle;

public class $[className]Binder{

    private ClientBuilder builder;

public $[className]Binder(String args[], LifeCycle aLifecycle) throws Exception {
        init(args,null);
    }

    public $[className]Binder(String[] args){
    	init(args,null);
    }
    
    
    public $[className]Binder(ActivationID activationID,
                MarshalledObject data) throws IOException,
                                              ActivationException,
                                              ConfigurationException,
                                              ClassNotFoundException{
    
    	Object configData=data.get();
    	
    	init((String[])configData,activationID);
    
    }

private void init(String[] args, ActivationID actid){

 if (System.getSecurityManager() == null)
            System.setSecurityManager(new RMISecurityManager());
             try {
	Configuration config = ConfigurationProvider.getInstance(args);
        builder = new ClientBuilderImpl();
        builder.initClient(config, "$[packageName].$[className]");
        System.out.println("Waiting:");
        try {
            Thread.sleep(5000);
        } catch (Exception ex) {

        }
        ServiceItem o = builder.getService(null);
        System.out.println(o.service.getClass().getName());
        $[className] client = new $[className]();
        client.$[method](($[castClassName]) o.service);

   } catch (ConfigurationException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        
    }

 
    
    public static void main(String[] args){
       
            new $[className]Binder(args);
        
    }
}