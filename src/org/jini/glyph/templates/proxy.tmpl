    package $[packageName].constrainable;

/* Generated via Exportable Annotations */

public class $[className]Proxy implements $[remoteParentInterfaces], java.io.Serializable{

    final $[mainParentInterface] backend;

    final net.jini.id.Uuid id;

   $[className]Proxy($[mainParentInterface] backend, net.jini.id.Uuid id){
        this.backend = backend;
       
        this.id = id;
    }
 
    public net.jini.id.Uuid getReferentUuid(){
        return this.id;
    }

    public int hashCode(){
        return id.hashCode();
    }

    public boolean equals(Object o){
        return net.jini.id.ReferentUuids.compare(this, o);
    }

    final static class ConstrainableProxy extends $[className]Proxy implements net.jini.core.constraint.RemoteMethodControl{
        private static final long serialVersionUID = 1L;

        ConstrainableProxy($[mainParentInterface] server, net.jini.id.Uuid id, net.jini.core.constraint.MethodConstraints methodConstraints){
            super(constrainServer(server, methodConstraints),id);
        }
        

        public net.jini.core.constraint.RemoteMethodControl setConstraints(net.jini.core.constraint.MethodConstraints methodConstraints){
            return new $[className]Proxy.ConstrainableProxy(backend, id, methodConstraints);
        }

        public net.jini.core.constraint.MethodConstraints getConstraints(){
            return ((net.jini.core.constraint.RemoteMethodControl) backend).getConstraints();
        }

        private static $[mainParentInterface] constrainServer($[mainParentInterface] server, net.jini.core.constraint.MethodConstraints methodConstraints){ 
            return ($[mainParentInterface]) ((net.jini.core.constraint.RemoteMethodControl) server).setConstraints(methodConstraints);
        }
    }

    $[methods]

}   