/*
 * org.jini.projects.athena : org.jini.projects.org.jini.projects.athena.leasing
 *
 *
 * ConnectionResource.java
 * Created on 07-Jan-2004
 *
 * ConnectionResource
 *
 */
package $[packageName];

import java.util.logging.Logger;

import net.jini.id.Uuid;


import com.sun.jini.landlord.LeasedResource;
import org.jini.glyph.AccessibleLeasedResource;

/**
 * Provides the link between a resource that can be leased, and an Athena Connection.
 * Allows the reaper to forcibly deallocate, and cleanup, a connection from a client. 
 * @author calum
 */
public class $[className]LeasedResource implements AccessibleLeasedResource {
	private Logger log = Logger.getLogger("$[packageName]");
    private $[className] resource;
    private long expiry;
    private Uuid cookie;
    /**
     * Build a resource with a given connection and a cookie id
     */
    public $[className]LeasedResource($[className] resource, Uuid cookie) {
        super();
        this.resource = resource;
        this.cookie = cookie;
        
        // URGENT Complete constructor stub for ConnectionResource
    }

    /* @see com.sun.jini.landlord.LeasedResource#setExpiration(long)
     */
    public void setExpiration(long newExpiration) {
        // TODO Complete method stub for setExpiration
    	expiry = newExpiration;
    }

    /* @see com.sun.jini.landlord.LeasedResource#getExpiration()
     */
    public long getExpiration() {
        // TODO Complete method stub for getExpiration
        return expiry;
    }

    /* @see com.sun.jini.landlord.LeasedResource#getCookie()
     */
    public Uuid getCookie() {
        return cookie;
    }

    /**
     * @return Returns the connection linked to this leased resource.
     */
    public $[className] get$[className]() {
        return resource;
    }

	public Object getResourceObject(){
		return resource;
	}
  
}
